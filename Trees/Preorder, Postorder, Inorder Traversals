#include<bits/stdc++.h>

using namespace std;

typedef struct Node
{
    int data;
    struct Node *left;
    struct Node *right;

    Node(int val)
    {
        data=val;
        left=right=NULL;
    } 
}node;

void preorder(node* root, int k, int &max)
{
    if(root==NULL)
        return;

    cout<<root->data<<" ";
    
    if(k>max)
    {
    	max=k;
	}

    preorder(root->left, k+1, max);
    preorder(root->right, k+1, max);
}


void postorder(node* root)
{
    if(root==NULL)
        return;

    postorder(root->left);
    postorder(root->right);

    cout<<root->data<<" ";
}

void inorder(node* root)
{
    if(root==NULL)
        return;

    inorder(root->left);

    cout<<root->data<<" ";

    inorder(root->right);
}
int main()
{
	int max=-1;
    node* root= new node(3);
    root->left= new node(4);
    root->right= new node(6);
    root->left->left= new node(1);
    root->left->left->right= new node(2);
    root->left->left->right->right= new node(9);
    root->right->left= new node(7);
    root->right->right= new node(11);
    root->right->right->right= new node(21);
    root->right->right->right->left= new node(15);
    root->right->right->right->left->right= new node(13);

    cout<<"Preorder Traversal\n";
    preorder(root, 0, max);
    cout<<"\nPreorder Traversal\n";
    postorder(root);
    cout<<"\nInorder Traversal\n";
    inorder(root);
    cout<<"\nHeight of binary tree is: "<<max;

    return 0;
}